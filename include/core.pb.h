// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

#ifndef PROTOBUF_core_2eproto__INCLUDED
#define PROTOBUF_core_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_core_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsrequestImpl();
void InitDefaultsrequest();
void InitDefaultsresponseImpl();
void InitDefaultsresponse();
void InitDefaultsreq_pingImpl();
void InitDefaultsreq_ping();
void InitDefaultsres_pingImpl();
void InitDefaultsres_ping();
inline void InitDefaults() {
  InitDefaultsrequest();
  InitDefaultsresponse();
  InitDefaultsreq_ping();
  InitDefaultsres_ping();
}
}  // namespace protobuf_core_2eproto
namespace nano {
namespace api {
class req_ping;
class req_pingDefaultTypeInternal;
extern req_pingDefaultTypeInternal _req_ping_default_instance_;
class request;
class requestDefaultTypeInternal;
extern requestDefaultTypeInternal _request_default_instance_;
class res_ping;
class res_pingDefaultTypeInternal;
extern res_pingDefaultTypeInternal _res_ping_default_instance_;
class response;
class responseDefaultTypeInternal;
extern responseDefaultTypeInternal _response_default_instance_;
}  // namespace api
}  // namespace nano
namespace nano {
namespace api {

enum APIVersion {
  VERSION_INVALID = 0,
  VERSION_MAJOR = 1,
  VERSION_MINOR = 0,
  APIVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  APIVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool APIVersion_IsValid(int value);
const APIVersion APIVersion_MIN = VERSION_INVALID;
const APIVersion APIVersion_MAX = VERSION_MAJOR;
const int APIVersion_ARRAYSIZE = APIVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* APIVersion_descriptor();
inline const ::std::string& APIVersion_Name(APIVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    APIVersion_descriptor(), value);
}
inline bool APIVersion_Parse(
    const ::std::string& name, APIVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<APIVersion>(
    APIVersion_descriptor(), name, value);
}
enum RequestType {
  INVALID = 0,
  REGISTER_CALLBACK = 1,
  PING = 2,
  ACCOUNT_BALANCE = 3,
  ACCOUNT_BLOCK_COUNT = 4,
  ACCOUNT_PENDING = 5,
  ADDRESS_VALID = 1000,
  RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestType_IsValid(int value);
const RequestType RequestType_MIN = INVALID;
const RequestType RequestType_MAX = ADDRESS_VALID;
const int RequestType_ARRAYSIZE = RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestType_descriptor();
inline const ::std::string& RequestType_Name(RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestType_descriptor(), value);
}
inline bool RequestType_Parse(
    const ::std::string& name, RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestType>(
    RequestType_descriptor(), name, value);
}
// ===================================================================

class request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nano.api.request) */ {
 public:
  request();
  virtual ~request();

  request(const request& from);

  inline request& operator=(const request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  request(request&& from) noexcept
    : request() {
    *this = ::std::move(from);
  }

  inline request& operator=(request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const request* internal_default_instance() {
    return reinterpret_cast<const request*>(
               &_request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(request* other);
  friend void swap(request& a, request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline request* New() const PROTOBUF_FINAL { return New(NULL); }

  request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const request& from);
  void MergeFrom(const request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .nano.api.RequestType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::nano::api::RequestType type() const;
  void set_type(::nano::api::RequestType value);

  // @@protoc_insertion_point(class_scope:nano.api.request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_core_2eproto::TableStruct;
  friend void ::protobuf_core_2eproto::InitDefaultsrequestImpl();
};
// -------------------------------------------------------------------

class response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nano.api.response) */ {
 public:
  response();
  virtual ~response();

  response(const response& from);

  inline response& operator=(const response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  response(response&& from) noexcept
    : response() {
    *this = ::std::move(from);
  }

  inline response& operator=(response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const response* internal_default_instance() {
    return reinterpret_cast<const response*>(
               &_response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(response* other);
  friend void swap(response& a, response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline response* New() const PROTOBUF_FINAL { return New(NULL); }

  response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const response& from);
  void MergeFrom(const response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_message = 3;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 3;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_error_message(::std::string&& value);
  #endif
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // string error_category = 4;
  void clear_error_category();
  static const int kErrorCategoryFieldNumber = 4;
  const ::std::string& error_category() const;
  void set_error_category(const ::std::string& value);
  #if LANG_CXX11
  void set_error_category(::std::string&& value);
  #endif
  void set_error_category(const char* value);
  void set_error_category(const char* value, size_t size);
  ::std::string* mutable_error_category();
  ::std::string* release_error_category();
  void set_allocated_error_category(::std::string* error_category);

  // .nano.api.RequestType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::nano::api::RequestType type() const;
  void set_type(::nano::api::RequestType value);

  // sint32 error_code = 2;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nano.api.response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::internal::ArenaStringPtr error_category_;
  int type_;
  ::google::protobuf::int32 error_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_core_2eproto::TableStruct;
  friend void ::protobuf_core_2eproto::InitDefaultsresponseImpl();
};
// -------------------------------------------------------------------

class req_ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nano.api.req_ping) */ {
 public:
  req_ping();
  virtual ~req_ping();

  req_ping(const req_ping& from);

  inline req_ping& operator=(const req_ping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  req_ping(req_ping&& from) noexcept
    : req_ping() {
    *this = ::std::move(from);
  }

  inline req_ping& operator=(req_ping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const req_ping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const req_ping* internal_default_instance() {
    return reinterpret_cast<const req_ping*>(
               &_req_ping_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(req_ping* other);
  friend void swap(req_ping& a, req_ping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline req_ping* New() const PROTOBUF_FINAL { return New(NULL); }

  req_ping* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const req_ping& from);
  void MergeFrom(const req_ping& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(req_ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:nano.api.req_ping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_core_2eproto::TableStruct;
  friend void ::protobuf_core_2eproto::InitDefaultsreq_pingImpl();
};
// -------------------------------------------------------------------

class res_ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nano.api.res_ping) */ {
 public:
  res_ping();
  virtual ~res_ping();

  res_ping(const res_ping& from);

  inline res_ping& operator=(const res_ping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  res_ping(res_ping&& from) noexcept
    : res_ping() {
    *this = ::std::move(from);
  }

  inline res_ping& operator=(res_ping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const res_ping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const res_ping* internal_default_instance() {
    return reinterpret_cast<const res_ping*>(
               &_res_ping_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(res_ping* other);
  friend void swap(res_ping& a, res_ping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline res_ping* New() const PROTOBUF_FINAL { return New(NULL); }

  res_ping* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const res_ping& from);
  void MergeFrom(const res_ping& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(res_ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:nano.api.res_ping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_core_2eproto::TableStruct;
  friend void ::protobuf_core_2eproto::InitDefaultsres_pingImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// request

// .nano.api.RequestType type = 1;
inline void request::clear_type() {
  type_ = 0;
}
inline ::nano::api::RequestType request::type() const {
  // @@protoc_insertion_point(field_get:nano.api.request.type)
  return static_cast< ::nano::api::RequestType >(type_);
}
inline void request::set_type(::nano::api::RequestType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:nano.api.request.type)
}

// -------------------------------------------------------------------

// response

// .nano.api.RequestType type = 1;
inline void response::clear_type() {
  type_ = 0;
}
inline ::nano::api::RequestType response::type() const {
  // @@protoc_insertion_point(field_get:nano.api.response.type)
  return static_cast< ::nano::api::RequestType >(type_);
}
inline void response::set_type(::nano::api::RequestType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:nano.api.response.type)
}

// sint32 error_code = 2;
inline void response::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 response::error_code() const {
  // @@protoc_insertion_point(field_get:nano.api.response.error_code)
  return error_code_;
}
inline void response::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:nano.api.response.error_code)
}

// string error_message = 3;
inline void response::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& response::error_message() const {
  // @@protoc_insertion_point(field_get:nano.api.response.error_message)
  return error_message_.GetNoArena();
}
inline void response::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nano.api.response.error_message)
}
#if LANG_CXX11
inline void response::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nano.api.response.error_message)
}
#endif
inline void response::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nano.api.response.error_message)
}
inline void response::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nano.api.response.error_message)
}
inline ::std::string* response::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:nano.api.response.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* response::release_error_message() {
  // @@protoc_insertion_point(field_release:nano.api.response.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void response::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:nano.api.response.error_message)
}

// string error_category = 4;
inline void response::clear_error_category() {
  error_category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& response::error_category() const {
  // @@protoc_insertion_point(field_get:nano.api.response.error_category)
  return error_category_.GetNoArena();
}
inline void response::set_error_category(const ::std::string& value) {
  
  error_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nano.api.response.error_category)
}
#if LANG_CXX11
inline void response::set_error_category(::std::string&& value) {
  
  error_category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nano.api.response.error_category)
}
#endif
inline void response::set_error_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nano.api.response.error_category)
}
inline void response::set_error_category(const char* value, size_t size) {
  
  error_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nano.api.response.error_category)
}
inline ::std::string* response::mutable_error_category() {
  
  // @@protoc_insertion_point(field_mutable:nano.api.response.error_category)
  return error_category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* response::release_error_category() {
  // @@protoc_insertion_point(field_release:nano.api.response.error_category)
  
  return error_category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void response::set_allocated_error_category(::std::string* error_category) {
  if (error_category != NULL) {
    
  } else {
    
  }
  error_category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_category);
  // @@protoc_insertion_point(field_set_allocated:nano.api.response.error_category)
}

// -------------------------------------------------------------------

// req_ping

// uint32 id = 1;
inline void req_ping::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 req_ping::id() const {
  // @@protoc_insertion_point(field_get:nano.api.req_ping.id)
  return id_;
}
inline void req_ping::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:nano.api.req_ping.id)
}

// -------------------------------------------------------------------

// res_ping

// uint32 id = 1;
inline void res_ping::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 res_ping::id() const {
  // @@protoc_insertion_point(field_get:nano.api.res_ping.id)
  return id_;
}
inline void res_ping::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:nano.api.res_ping.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace nano

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::nano::api::APIVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nano::api::APIVersion>() {
  return ::nano::api::APIVersion_descriptor();
}
template <> struct is_proto_enum< ::nano::api::RequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nano::api::RequestType>() {
  return ::nano::api::RequestType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_core_2eproto__INCLUDED
